# tosZones
# tuxOstat zone reading and configuration
# TuxOstat - Linux-based thermostat <http://www.jasonantman.com>
# Copyright 2008 Jason Antman. <jason@jasonantman.com>.
# Licensed under Version 3 or later of the GNU GPL.
#  Time-stamp: "2008-06-11 10:34:30 tuxostat"
#  $Id: tosRelayControl.py,v 1.1.1.3 2008/06/11 16:49:32 jantman Exp $

from ctypes import *
import sys
#Phidget specific imports
from Phidgets.PhidgetException import *
from Phidgets.Events.Events import *
from Phidgets.Devices.InterfaceKit import *

from tuxostat.tosLogger import tosLogger

class tosRelayControl:
    """
    This class handles polling and controlling the Phidgets InterfaceKit 0/0/4. It requires the PhidgetLinux libraries and the PhidgetPython libraries.
    """

    ifkit = None
    logger = None

    def __init__(self):
        """
        Instantiate the InterfaceKit object and open it.
        """
        self.logger = tosLogger
        
        self.ifkit = InterfaceKit()

        # open ifkit
        try:
            self.ifkit.openPhidget()
        except PhidgetException, e:
            self.logger.log(self, 3, "Phidget Exception %i: %s" % (e.code, e.message))
            exit(1)

        # wait for attach
        try:
            self.ifkit.waitForAttach(10000)
        except PhidgetException, e:
            self.logger.log(self, 3, "Phidget Exception %i: %s" % (e.code, e.message))
            
    def close(self):
        """
        Closes the Phidget.
        """
        try:
            self.ifkit.closePhidget()
        except PhidgetException, e:
            self.logger.log(self, 3, "Phidget Exception %i: %s" % (e.code, e.message))

    def GetOutputState(self, index):
        """
        Gets the state of output specified by integer index (0 to 3).
        @param index (int) - integer index (0 to 3)
        """
        return self.ifkit.getOutputState(index)

    def SetOutputState(self, index, state):
        """
        Sets the state of the given output.
        @param index (int) - integer index (0 to 3)
        @param state (boolean) - True for on or False for off.
        """
        self.ifkit.setOutputState(index, state)
